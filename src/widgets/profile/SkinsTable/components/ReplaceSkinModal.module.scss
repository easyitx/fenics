.modal {
  :global(.modal) {
    max-width: 900px;
    width: 100%;
    max-height: 80vh;
  }

  :global(.content) {
    overflow: visible;
    max-height: none;
  }
}

.modalContent {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-xs);
  padding: 0;
  height: 100%;
}

.balanceInfo {
  display: flex;
  justify-content: center;
  border-bottom: 1px solid hsl(var(--border));
  flex-shrink: 0;
  padding: var(--spacing-xs);
}

.skinsGrid {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: repeat(2, 1fr);
  gap: var(--spacing-xs);
  padding: var(--spacing-xs) var(--spacing-md);
  height: 230px;
  overflow-y: auto;

  &::-webkit-scrollbar {
    width: 8px;
  }

  &::-webkit-scrollbar-track {
    background: var(--color-background);
    border-radius: var(--radius-sm);
  }

  &::-webkit-scrollbar-thumb {
    background: var(--color-primary);
    border-radius: var(--radius-sm);
    border: 1px solid var(--color-background);
  }

  &::-webkit-scrollbar-thumb:hover {
    background: var(--color-accent-primary);
  }

  scrollbar-width: thin;
  scrollbar-color: var(--color-primary) var(--color-background);
}

.skinCardWrapper {
  position: relative;
  cursor: pointer;
  transition: all 150ms ease-in-out;
  border-radius: 0.5rem;
  overflow: hidden;
  height: 120px;
  display: flex;
  flex-direction: column;

  &:hover {
    transform: none !important;

    .hoverActions {
      opacity: 1;
    }

    .plusIcon {
      background: rgba(255, 255, 255, 0.2);
    }
  }

  &.selected {
    border: 2px solid hsl(var(--primary));
    border-radius: 0.5rem;
    transform: none !important;
  }

  :global(.skinCardLive) {
    height: 100%;
    width: 100%;
    &:hover {
      transform: none !important;
    }
  }
}

.hoverActions {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    180deg,
    rgba(80, 92, 173, 0.85) 0%,
    rgba(33, 38, 72, 0.85) 141.67%
  );
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 0;
  transition: all 150ms ease-in-out;
  z-index: 5;
  border-radius: 0.5rem;
}

.plusIcon {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 40px;
  height: 40px;
  border-radius: 50%;
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(4px);
  transition: all 150ms ease-in-out;
}

.selectedOverlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    180deg,
    rgba(80, 92, 173, 0.85) 0%,
    rgba(33, 38, 72, 0.85) 141.67%
  );
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 10;
  border-radius: 0.5rem;
  animation: fadeIn 0.2s ease-in-out;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.replaceInfo {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 1rem;
  background: hsl(var(--card));
  border-radius: 0.5rem;
  border: 1px solid hsl(var(--border));
  gap: 1rem;
  flex-shrink: 0;
}

.currentSkin,
.replacementSkin {
  flex: 1;
  text-align: center;
}

.weaponName {
  color: var(--color-text-secondary);
  font-weight: var(--font-weight-bold);
}

.swapButton {
  display: flex;
  align-items: center;
  justify-content: center;
}

.swapIconButton {
  width: 50px;
  height: 50px;
  border-radius: 50%;
  padding: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  background: hsl(var(--primary));
  border: none;
  color: white;

  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }

  svg {
    width: 20px;
    height: 20px;
  }
}

.actionButtons {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  padding: 0 1rem 0.5rem 1rem;
  border-top: 1px solid hsl(var(--border));
  flex-shrink: 0;
}

.replaceButton {
  width: 100%;
  height: 48px;
  background: hsl(var(--primary));
  border: none;
  border-radius: 0.5rem;
  transition: all 150ms ease-in-out;

  &:hover:not(:disabled) {
    background: hsl(var(--primary) / 0.9);
    transform: translateY(-1px);
  }

  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    transform: none;
  }
}

.cancelButton {
  width: 100%;
  height: 40px;
  background: transparent;
  border: 1px solid hsl(var(--border));
  border-radius: 0.5rem;
  transition: all 150ms ease-in-out;

  &:hover {
    background: hsl(var(--muted));
    border-color: hsl(var(--primary));
  }
}

@media (max-width: 768px) {
  .modal {
    :global(.modal) {
      max-width: 95vw;
      max-height: 90vh;
    }
  }

  .skinsGrid {
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(2, 1fr);
    gap: var(--spacing-xs);
    height: 240px;
    padding: var(--spacing-xs);
  }

  .replaceInfo {
    flex-direction: column;
    gap: 0.5rem;
    padding: 0.75rem;
  }

  .currentSkin,
  .replacementSkin {
    text-align: left;
    width: 100%;
  }

  .swapButton {
    order: -1;
  }

  .actionButtons {
    padding: 0.75rem;
  }

  .replaceButton,
  .cancelButton {
    height: 44px;
  }
}

@media (max-width: 425px) {
  .modal {
    :global(.modal) {
      max-width: 100vw;
      max-height: 95vh;
    }
  }

  .skinsGrid {
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: repeat(2, 1fr);
    gap: 0.5rem;
    height: 200px;
    padding: 0.5rem;
  }

  .selectionIndicator {
    width: 20px;
    height: 20px;
    top: 2px;
    right: 2px;

    svg {
      width: 12px;
      height: 12px;
    }
  }

  .replaceInfo {
    padding: 0.5rem;
  }

  .actionButtons {
    padding: 0.5rem;
  }
}

.skinCardWrapper.selected {
  .selectionIndicator {
    background: hsl(var(--primary));

    .checkmark {
      color: white;
    }
  }
}

.skinCardWrapper {
  animation: fadeInUp 0.3s ease-out;
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.modalContent {
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
  border-radius: 0.5rem;
  overflow: hidden;
}

.skinsGrid {
  background: linear-gradient(
    135deg,
    hsl(var(--background) / 0.5) 0%,
    hsl(var(--muted) / 0.1) 100%
  );
  border-radius: 0.5rem;
  border: 1px solid hsl(var(--border) / 0.5);

  position: relative;

  &::after {
    content: "";
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    height: 20px;
    background: linear-gradient(
      to top,
      hsl(var(--background)) 0%,
      transparent 100%
    );
    pointer-events: none;
    border-radius: 0 0 0.5rem 0.5rem;
  }
}

.skinCardWrapper {
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);

  &.selected {
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2),
      0 0 0 2px hsl(var(--primary) / 0.3);
  }
}
